@inject Microsoft.Extensions.Options.IOptions<SistemaLeilao_web.Settings.ApiSettings> ApiSettings
@{
    ViewData["Title"] = "Leilões Online";
    // Layout = null; // Using custom layout defined within this view
    // var apiBaseUrl = ApiSettings.Value.BaseUrl; // No longer needed for direct API calls
}

<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <style>
        body {
            background-color: #343a40; /* Dark background */
            color: white;
            font-family: sans-serif;
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            min-height: 100vh;
        }
        .top-header {
            background-color: #dc3545; /* Red header */
            color: white;
            padding: 0.8rem 1.5rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-size: 1.2rem;
        }
        .top-header .logo {
            font-weight: bold;
        }
        .top-header .user-info {
            display: flex;
            align-items: center;
        }
        .top-header .user-info span {
            margin-right: 1rem;
        }
        .top-header .user-info i {
            font-size: 1.3rem;
            margin-left: 0.5rem;
        }

        .main-container {
            display: flex;
            flex-grow: 1;
        }

        .sidebar {
            background-color: #495057; /* Sidebar background */
            color: #e9ecef;
            width: 250px;
            padding: 1rem 0;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            flex-shrink: 0; /* Prevent sidebar from shrinking */
        }
        .sidebar .menu-header {
            padding: 0.5rem 1.5rem;
            margin-bottom: 1rem;
            font-size: 1.1rem;
            font-weight: bold;
            border-bottom: 1px solid #6c757d;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .sidebar ul {
            list-style: none;
            padding: 0;
            margin: 0;
            flex-grow: 1;
        }
        .sidebar ul li a {
            display: block;
            padding: 0.8rem 1.5rem;
            color: #e9ecef;
            text-decoration: none;
            transition: background-color 0.2s ease;
        }
        .sidebar ul li a:hover, .sidebar ul li a.active {
            background-color: #6c757d; /* Hover/active background */
            color: white;
        }
        .sidebar .bottom-menu {
             border-top: 1px solid #6c757d;
             padding-top: 1rem;
        }
        .sidebar .bottom-menu ul li a#logoutButton {
            cursor: pointer; /* Indicate it's clickable */
        }

        .content-area {
            background-color: #343a40; /* Main content background */
            flex-grow: 1;
            padding: 2rem;
            overflow-y: auto; /* Allow scrolling if content overflows */
        }

        /* Auction item styles */
        .auction-highlight {
            background-color: #495057;
            padding: 1.5rem;
            border-radius: 8px;
            margin-bottom: 2rem;
            display: flex;
            gap: 1.5rem;
        }
        .auction-highlight .image-gallery img {
            max-width: 100px;
            margin-bottom: 0.5rem;
            border-radius: 4px;
            cursor: pointer; /* Indicate thumbnails are clickable */
        }
         .auction-highlight .main-image img {
            max-width: 400px; /* Adjust as needed */
            max-height: 300px; /* Limit height */
            object-fit: contain; /* Fit image within bounds */
            border-radius: 8px;
        }
        .auction-details {
            flex-grow: 1;
        }
        .auction-details h5 {
            margin-top: 0;
        }
        .bids-list {
            background-color: #212529;
            padding: 1rem;
            border-radius: 4px;
            margin-top: 1rem;
            margin-bottom: 1rem;
            max-height: 150px; /* Limit height and allow scroll */
            overflow-y: auto;
        }
        .bids-list h6 {
            position: sticky; /* Keep header visible */
            top: 0;
            background-color: #212529;
            padding-bottom: 0.5rem;
            margin-bottom: 0.5rem;
            z-index: 1;
        }
        .bids-list .bid-item {
            display: flex;
            justify-content: space-between;
            margin-bottom: 0.5rem;
            align-items: center;
        }
         .bids-list .bid-item img {
             width: 30px; height: 30px; border-radius: 50%; margin-right: 10px;
         }
        .bid-input-group {
            display: flex;
            gap: 0.5rem;
        }
        .bid-input-group .form-control {
             background-color: #212529; color: white; border: 1px solid #6c757d;
        }
        .btn-bid {
            background-color: #198754; border-color: #198754; color: white;
        }

        .current-auctions {
            margin-top: 2rem;
        }
        .current-auctions h5 {
            margin-bottom: 1rem;
        }
        .auction-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 1rem;
        }
        .auction-card {
            background-color: #495057;
            padding: 1rem;
            border-radius: 8px;
            text-align: center;
            position: relative;
            cursor: pointer; /* Indicate cards are clickable */
            transition: transform 0.2s ease;
        }
        .auction-card:hover {
            transform: translateY(-5px);
        }
        .auction-card img {
            max-width: 100%;
            height: 150px; /* Fixed height */
            object-fit: cover; /* Ensure image covers the area */
            border-radius: 4px;
            margin-bottom: 0.5rem;
        }
        .auction-card .close-btn {
            position: absolute;
            top: 5px;
            right: 5px;
            color: #dc3545;
            background: rgba(0,0,0,0.5);
            border-radius: 50%;
            padding: 0 5px;
            cursor: pointer;
            display: none; /* Hide by default, maybe show on hover or for user's own auctions */
        }
        #loadingMessage, #errorMessage {
            text-align: center;
            margin-top: 2rem;
            font-size: 1.1rem;
        }
        .error-message {
            color: #ffc107;
        }

    </style>
</head>
<body>
    <div class="top-header">
        <div class="logo">
            <i class="bi bi-hammer"></i> Leilões online
        </div>
        <div class="user-info">
            <span id="userName">Olá, ...</span> @* Placeholder - Will be filled by JS *@
            <i class="bi bi-person-circle"></i>
            <i class="bi bi-bell-fill"></i> @* Placeholder - Add notification logic later *@
        </div>
    </div>

    <div class="main-container">
        <aside class="sidebar">
            <div>
                <div class="menu-header">
                    <span>Menu</span>
                    <i class="bi bi-list"></i>
                </div>
                <ul>
                    <li><a href="@Url.Action("Cadastro", "Leilao")">Cadastrar Leilão</a></li>
                    <li><a href="@Url.Action("MeusLances", "Leilao")">Meus lances</a></li> @* Updated Action Name if needed *@
                    <li><a href="@Url.Action("HistoricoLeiloes", "Leilao")">Histórico de leilões</a></li>
                    <li><a href="@Url.Action("BuscarLances", "Leilao")">Buscar lances</a></li>
                </ul>
            </div>
            <div class="bottom-menu">
                 <ul>
                    <li><a href="#">Configurações</a></li> @* Placeholder link *@
                    <li><a id="logoutButton">Sair</a></li> @* Changed to ID for JS binding *@
                </ul>
            </div>
        </aside>

        <main class="content-area">
            <div id="loadingMessage">Carregando leilões...</div>
            <div id="errorMessage" class="error-message" style="display: none;"></div>

            <div id="auctionContent" style="display: none;">
                <h4>Principais lances</h4>
                @* Highlighted Auction - Will be populated by JS *@
                <div class="auction-highlight" id="highlightedAuction">
                    <div class="image-gallery" id="highlightGallery"></div>
                    <div class="main-image" id="highlightMainImage"></div>
                    <div class="auction-details" id="highlightDetails">
                        <h5 id="highlightTitle"></h5>
                        <p id="highlightInitialPrice"></p>
                        <div class="bids-list" id="highlightBids">
                            <h6>Últimos lances</h6>
                            <div id="highlightBidsContent"></div>
                        </div>
                        <div class="bid-input-group">
                            <input type="number" step="0.01" class="form-control" id="highlightBidInput" placeholder="Seu lance">
                            <button class="btn btn-bid" id="highlightBidButton">Dar lance</button>
                        </div>
                         <small id="highlightTimeLeft"></small> @* Placeholder for time left *
                    </div>
                </div>

                <div class="current-auctions">
                    <h5>LANCES DO MOMENTO</h5>
                    <div class="auction-grid" id="auctionGrid">
                        @* Auction Cards - Will be populated by JS *@
                    </div>
                </div>
            </div>
        </main>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    @* <script src="~/js/signalr/dist/browser/signalr.min.js"></script> *@
    @* <script src="~/js/signalr-handler.js"></script> *@

    <script>
        const token = localStorage.getItem("jwtToken");

        // Function to parse JWT token (basic implementation)
        function parseJwt (token) {
            try {
                const base64Url = token.split('.')[1];
                const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
                const jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {
                    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
                }).join(''));
                return JSON.parse(jsonPayload);
            } catch (e) {
                return null;
            }
        }

        // Function to format currency
        function formatCurrency(value) {
            return parseFloat(value).toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' });
        }

        // Function to display auctions
        function displayAuctions(auctions) {
            const grid = $('#auctionGrid');
            const highlightContainer = $('#highlightedAuction');
            grid.empty(); // Clear previous auctions

            if (!auctions || auctions.length === 0) {
                grid.html('<p>Nenhum leilão ativo no momento.</p>');
                highlightContainer.hide(); // Hide highlight if no auctions
                return;
            }

            // Display first auction as highlighted (example logic)
            const firstAuction = auctions[0];
            displayHighlightedAuction(firstAuction);
            highlightContainer.show();

            // Display other auctions in the grid
            auctions.forEach(auction => {
                // Basic image handling - assumes 'imagens' is a JSON string array of URLs
                let imageUrl = 'https://via.placeholder.com/200x150/495057/ffffff?text=Leilao';
                try {
                    const images = JSON.parse(auction.imagens || '[]');
                    if (images.length > 0) {
                        imageUrl = images[0]; // Use first image
                    }
                } catch (e) { console.error("Error parsing images for auction:", auction.id, e); }

                const card = `
                    <div class="auction-card" data-auction-id="${auction.id}">
                        <img src="${imageUrl}" alt="${auction.titulo}">
                        <p>${auction.titulo}</p>
                        <small>Início: ${new Date(auction.dataInicio).toLocaleString('pt-BR')}</small><br/>
                        <small>Preço Inicial: ${formatCurrency(auction.precoInicial)}</small>
                    </div>
                `;
                grid.append(card);
            });

            // Add click handler for grid cards to potentially highlight them
            $('.auction-card').on('click', function() {
                const auctionId = $(this).data('auction-id');
                const selectedAuction = auctions.find(a => a.id === auctionId);
                if (selectedAuction) {
                    displayHighlightedAuction(selectedAuction);
                }
            });
        }

        // Function to display the highlighted auction
        function displayHighlightedAuction(auction) {
            $('#highlightTitle').text(auction.titulo);
            $('#highlightInitialPrice').text(`Valor Inicial: ${formatCurrency(auction.precoInicial)}`);
            $('#highlightBidButton').data('auction-id', auction.id); // Store auction ID for bidding
            $('#highlightBidInput').val(''); // Clear previous bid input

            // Display images
            const gallery = $('#highlightGallery');
            const mainImageContainer = $('#highlightMainImage');
            gallery.empty();
            mainImageContainer.empty();
            let mainImageUrl = 'https://via.placeholder.com/400x300/495057/ffffff?text=Leilao';
            try {
                const images = JSON.parse(auction.imagens || '[]');
                if (images.length > 0) {
                    mainImageUrl = images[0];
                    images.forEach((imgUrl, index) => {
                        gallery.append(`<img src="${imgUrl}" alt="Thumbnail ${index + 1}" data-full-image="${imgUrl}">`);
                    });
                    mainImageContainer.html(`<img src="${mainImageUrl}" alt="${auction.titulo}">`);

                    // Add click handler for thumbnails
                    $('#highlightGallery img').on('click', function() {
                        const fullImageUrl = $(this).data('full-image');
                        mainImageContainer.html(`<img src="${fullImageUrl}" alt="${auction.titulo}">`);
                    });
                } else {
                     mainImageContainer.html(`<img src="${mainImageUrl}" alt="${auction.titulo}">`);
                }
            } catch (e) {
                 mainImageContainer.html(`<img src="${mainImageUrl}" alt="${auction.titulo}">`);
                 console.error("Error parsing images for highlighted auction:", auction.id, e);
            }

            // Fetch and display bids for this auction
            fetchBids(auction.id);

            // TODO: Display time left (requires DataFim)
            $('#highlightTimeLeft').text(auction.dataFim ? `Termina em: ${new Date(auction.dataFim).toLocaleString('pt-BR')}` : 'Sem data de término definida');
        }

        // Function to fetch and display bids
        function fetchBids(auctionId) {
            const bidsContent = $('#highlightBidsContent');
            bidsContent.html('Carregando lances...');

            // TODO: Replace with AJAX call to Controller action for fetching bids
            // $.ajax({
            //     url: `@Url.Action("GetBidsByLeilaoId", "Lance")?leilaoId=${auctionId}`, // Example URL
            //     type: "GET",
            //     headers: { "Authorization": "Bearer " + token },
            //     success: function(bids) {
            //         bidsContent.empty();
            //         if (bids && bids.length > 0) {
            //             bids.sort((a, b) => new Date(b.dataLance) - new Date(a.dataLance)); // Sort by date descending
            //             bids.forEach(bid => {
            //                 // Assuming bid object has valor, dataLance, and usuario object with nome
            //                 const bidItem = `
            //                     <div class="bid-item">
            //                         <span><img src="https://via.placeholder.com/30/6c757d/ffffff?text=${bid.usuario?.nome?.charAt(0) || '?'}" alt="User"> ${bid.usuario?.nome || 'Usuário Anônimo'}</span>
            //                         <span>${formatCurrency(bid.valor)}</span>
            //                     </div>
            //                 `;
            //                 bidsContent.append(bidItem);
            //             });
            //         } else {
            //             bidsContent.html('<small>Nenhum lance ainda.</small>');
            //         }
            //     },
            //     error: function(jqXHR, textStatus, errorThrown) {
            //         console.error("Error fetching bids:", textStatus, errorThrown);
            //         bidsContent.html('<small class="text-danger">Erro ao carregar lances.</small>');
            //     }
            // });
             bidsContent.html('<small>Funcionalidade de lances ainda não implementada.</small>'); // Placeholder
        }

        // Function to place a bid
        function placeBid(auctionId, bidAmount) {
            if (!bidAmount || isNaN(bidAmount) || bidAmount <= 0) {
                alert("Por favor, insira um valor de lance válido.");
                return;
            }

            // TODO: Replace with AJAX call to Controller action for placing a bid
            // $.ajax({
            //     url: `@Url.Action("PlaceBid", "Lance")`, // Example URL
            //     type: "POST",
            //     contentType: "application/json",
            //     headers: { "Authorization": "Bearer " + token, "RequestVerificationToken": $("input[name='__RequestVerificationToken']").val() }, // Include AntiForgeryToken if needed
            //     data: JSON.stringify({ LeilaoId: auctionId, Valor: bidAmount }),
            //     success: function(response) {
            //         if (response.success) {
            //             alert("Lance realizado com sucesso!");
            //             fetchBids(auctionId); // Refresh bids list
            //             $('#highlightBidInput').val(''); // Clear input
            //             // Potentially update highest bid info if available
            //         } else {
            //             alert("Erro ao realizar lance: " + (response.message || "Tente novamente."));
            //         }
            //     },
            //     error: function(jqXHR, textStatus, errorThrown) {
            //         console.error("Error placing bid:", textStatus, errorThrown);
            //         alert("Erro de comunicação ao tentar realizar o lance.");
            //     }
            // });
            alert('Funcionalidade de dar lance ainda não implementada.'); // Placeholder
        }

        // Function to fetch user info
        function fetchUserInfo() {
            // TODO: Replace with AJAX call to Controller action for user info
            // $.ajax({
            //     url: `@Url.Action("GetUserInfo", "Usuario")`, // Example URL
            //     type: "GET",
            //     headers: { "Authorization": "Bearer " + token },
            //     success: function(user) {
            //         if (user && user.nome) {
            //             $('#userName').text(`Olá, ${user.nome}`);
            //         } else {
            //              $('#userName').text('Olá, Visitante');
            //         }
            //     },
            //     error: function() {
            //          $('#userName').text('Olá, Visitante');
            //     }
            // });

            // Placeholder using JWT parsing
            if (token) {
                const decodedToken = parseJwt(token);
                // Assuming the token has a 'name' claim (adjust claim name as needed)
                const userName = decodedToken?.name || decodedToken?.unique_name || 'Usuário';
                $('#userName').text(`Olá, ${userName}`);
            } else {
                 $('#userName').text('Olá, Visitante');
                 // Redirect to login if no token?
                 // window.location.href = "@Url.Action("Login", "Usuario")";
            }
        }

        // Function to handle logout
        function handleLogout() {
            // TODO: Replace with AJAX call to Controller action for logout
            // $.ajax({
            //     url: `@Url.Action("Logout", "Usuario")`, // Example URL
            //     type: "POST",
            //     headers: { "Authorization": "Bearer " + token, "RequestVerificationToken": $("input[name='__RequestVerificationToken']").val() }, // Include AntiForgeryToken if needed
            //     success: function(response) {
            //         if (response.success) {
            //             localStorage.removeItem("jwtToken");
            //             window.location.href = "@Url.Action("Login", "Usuario")";
            //         } else {
            //             alert("Erro ao fazer logout: " + (response.message || "Tente novamente."));
            //         }
            //     },
            //     error: function() {
            //         alert("Erro de comunicação ao tentar fazer logout.");
            //     }
            // });

            // Simple client-side logout
            localStorage.removeItem("jwtToken");
            window.location.href = "@Url.Action("Login", "Usuario")";
        }

        $(document).ready(function () {
            fetchUserInfo(); // Get user info on page load

            $('#loadingMessage').show();
            $('#errorMessage').hide();
            $('#auctionContent').hide();

            // Fetch active auctions using Controller action
            $.ajax({
                url: "@Url.Action("GetLeiloesAtivos", "Leilao")",
                type: "GET",
                // headers: { "Authorization": "Bearer " + token }, // Controller handles auth via cookie
                success: function (auctions) {
                    $('#loadingMessage').hide();
                    $('#auctionContent').show();
                    displayAuctions(auctions);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    $('#loadingMessage').hide();
                    $('#errorMessage').text("Erro ao carregar leilões. Tente atualizar a página.").show();
                    console.error("Error fetching auctions:", textStatus, errorThrown, jqXHR.responseText);
                }
            });

            // Bid button click handler
            $('#highlightBidButton').on('click', function() {
                const auctionId = $(this).data('auction-id');
                const bidAmount = parseFloat($('#highlightBidInput').val());
                placeBid(auctionId, bidAmount);
            });

            // Logout button click handler
            $('#logoutButton').on('click', function(e) {
                e.preventDefault();
                handleLogout();
            });

            // TODO: Initialize SignalR connection here if needed
            // setupSignalR();
        });
    </script>
</body>
</html>

